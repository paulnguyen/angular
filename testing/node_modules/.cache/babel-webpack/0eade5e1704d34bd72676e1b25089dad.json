{"ast":null,"code":"import { tick } from '@angular/core/testing';\nexport * from './async-observable-helpers';\nexport * from './activated-route-stub';\nexport * from './jasmine-matchers';\nexport * from './router-link-directive-stub'; ///// Short utilities /////\n\n/** Wait a tick, then detect changes */\n\nexport function advance(f) {\n  tick();\n  f.detectChanges();\n} // See https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\n/** Button events to pass to `DebugElement.triggerEventHandler` for RouterLink event handler */\n\nexport const ButtonClickEvents = {\n  left: {\n    button: 0\n  },\n  right: {\n    button: 2\n  }\n};\n/** Simulate element click. Defaults to mouse left-button click event. */\n\nexport function click(el, eventObj = ButtonClickEvents.left) {\n  if (el instanceof HTMLElement) {\n    el.click();\n  } else {\n    el.triggerEventHandler('click', eventObj);\n  }\n}","map":{"version":3,"sources":["/Users/paulnguyen/Desktop/SRC/angular/testing/src/testing/index.ts"],"names":[],"mappings":"AACA,SAAS,IAAT,QAAuC,uBAAvC;AAEA,cAAc,4BAAd;AACA,cAAc,wBAAd;AACA,cAAc,oBAAd;AACA,cAAc,8BAAd,C,CAEA;;AAEA;;AACA,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA0C;AAC9C,EAAA,IAAI;AACJ,EAAA,CAAC,CAAC,aAAF;AACD,C,CAED;;AACA;;AACA,OAAO,MAAM,iBAAiB,GAAG;AAC9B,EAAA,IAAI,EAAG;AAAE,IAAA,MAAM,EAAE;AAAV,GADuB;AAE9B,EAAA,KAAK,EAAE;AAAE,IAAA,MAAM,EAAE;AAAV;AAFuB,CAA1B;AAKP;;AACA,OAAM,SAAU,KAAV,CAAgB,EAAhB,EAAgD,QAAA,GAAgB,iBAAiB,CAAC,IAAlF,EAAsF;AAC1F,MAAI,EAAE,YAAY,WAAlB,EAA+B;AAC7B,IAAA,EAAE,CAAC,KAAH;AACD,GAFD,MAEO;AACL,IAAA,EAAE,CAAC,mBAAH,CAAuB,OAAvB,EAAgC,QAAhC;AACD;AACF","sourcesContent":["import { DebugElement } from '@angular/core';\nimport { tick, ComponentFixture } from '@angular/core/testing';\n\nexport * from './async-observable-helpers';\nexport * from './activated-route-stub';\nexport * from './jasmine-matchers';\nexport * from './router-link-directive-stub';\n\n///// Short utilities /////\n\n/** Wait a tick, then detect changes */\nexport function advance(f: ComponentFixture<any>): void {\n  tick();\n  f.detectChanges();\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n/** Button events to pass to `DebugElement.triggerEventHandler` for RouterLink event handler */\nexport const ButtonClickEvents = {\n   left:  { button: 0 },\n   right: { button: 2 }\n};\n\n/** Simulate element click. Defaults to mouse left-button click event. */\nexport function click(el: DebugElement | HTMLElement, eventObj: any = ButtonClickEvents.left): void {\n  if (el instanceof HTMLElement) {\n    el.click();\n  } else {\n    el.triggerEventHandler('click', eventObj);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}