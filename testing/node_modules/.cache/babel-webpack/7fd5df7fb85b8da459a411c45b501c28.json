{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"/Users/paulnguyen/Desktop/SRC/angular/testing/src/app/twain/twain.component.ts.css!=!/Users/paulnguyen/Desktop/SRC/angular/testing/node_modules/@ngtools/webpack/src/inline-data-loader.js?data=LnR3YWluIHsgZm9udC1zdHlsZTogaXRhbGljOyB9IC5lcnJvciB7IGNvbG9yOiByZWQ7IH0%3D!/Users/paulnguyen/Desktop/SRC/angular/testing/src/app/twain/twain.component.ts\";\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, startWith } from 'rxjs/operators';\nimport { TwainService } from './twain.service';\nlet TwainComponent = class TwainComponent {\n  constructor(twainService) {\n    this.twainService = twainService;\n  }\n\n  ngOnInit() {\n    this.getQuote();\n  }\n\n  getQuote() {\n    this.errorMessage = '';\n    this.quote = this.twainService.getQuote().pipe(startWith('...'), catchError(err => {\n      // Wait a turn because errorMessage already set once this turn\n      setTimeout(() => this.errorMessage = err.message || err.toString());\n      return of('...'); // reset message to placeholder\n    }));\n  }\n\n};\n\nTwainComponent.ctorParameters = () => [{\n  type: TwainService\n}];\n\nTwainComponent = __decorate([Component({\n  selector: 'twain-quote',\n  template: `\n    <p class=\"twain\"><i>{{quote | async}}</i></p>\n    <button (click)=\"getQuote()\">Next quote</button>\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>`,\n  styles: [__NG_CLI_RESOURCE__0]\n})], TwainComponent);\nexport { TwainComponent };","map":{"version":3,"sources":["/Users/paulnguyen/Desktop/SRC/angular/testing/src/app/twain/twain.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AAEA,SAAqB,EAArB,QAA+B,MAA/B;AACA,SAAS,UAAT,EAAqB,SAArB,QAAsC,gBAAtC;AAEA,SAAS,YAAT,QAA6B,iBAA7B;IAaa,cAAc,GAAA,MAAd,cAAc,CAAA;AAIzB,EAAA,WAAA,CAAoB,YAApB,EAA8C;AAA1B,SAAA,YAAA,GAAA,YAAA;AAA8B;;AAElD,EAAA,QAAQ,GAAA;AACN,SAAK,QAAL;AACD;;AAED,EAAA,QAAQ,GAAA;AACN,SAAK,YAAL,GAAoB,EAApB;AACA,SAAK,KAAL,GAAa,KAAK,YAAL,CAAkB,QAAlB,GAA6B,IAA7B,CACX,SAAS,CAAC,KAAD,CADE,EAEX,UAAU,CAAG,GAAD,IAAa;AACvB;AACA,MAAA,UAAU,CAAC,MAAM,KAAK,YAAL,GAAoB,GAAG,CAAC,OAAJ,IAAe,GAAG,CAAC,QAAJ,EAA1C,CAAV;AACA,aAAO,EAAE,CAAC,KAAD,CAAT,CAHuB,CAGL;AACnB,KAJS,CAFC,CAAb;AAQD;;AApBwB,C;;;QAblB;;;AAaI,cAAc,GAAA,UAAA,CAAA,CAX1B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,aADD;AAET,EAAA,QAAQ,EAAE;;;AAGqD,iEALtD;;AAAA,CAAD,CAWiB,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, startWith } from 'rxjs/operators';\n\nimport { TwainService } from './twain.service';\n\n@Component({\n  selector: 'twain-quote',\n  template: `\n    <p class=\"twain\"><i>{{quote | async}}</i></p>\n    <button (click)=\"getQuote()\">Next quote</button>\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>`,\n  styles: [\n    `.twain { font-style: italic; } .error { color: red; }`\n  ]\n\n})\nexport class TwainComponent implements OnInit {\n  errorMessage!: string;\n  quote!: Observable<string>;\n\n  constructor(private twainService: TwainService) {}\n\n  ngOnInit(): void {\n    this.getQuote();\n  }\n\n  getQuote() {\n    this.errorMessage = '';\n    this.quote = this.twainService.getQuote().pipe(\n      startWith('...'),\n      catchError( (err: any) => {\n        // Wait a turn because errorMessage already set once this turn\n        setTimeout(() => this.errorMessage = err.message || err.toString());\n        return of('...'); // reset message to placeholder\n      })\n    );\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}